#!/bin/bash
# Author: Ellery Chan <ellery.chan@gmail.com>
#   Date: 28-JUN-2022
# Copyright (c) 2022 Ellery Chan

# Add one second of silence to the beginning of an audio file
# Usage:    gimmeasec <audio_file> ...
#
# Example:  gimmeasec song.mp3
#           - creates song_1s.mp3
#           - does not modify song.mp3

usage() {
    cat << EOF >&2
Prepend one second of silence to each audio file.  Runs 'ffmpeg' to
process the audio data.

Usage:  gimmeasec [-h] [-f] [-d SEC] [-b BACKUP_DIR] AUDIO_FILE [...]
 where
          -b | --backup-dir   move originals to backup directory BACKUP_DIR
          -d | --delay        add SEC seconds of silence to the start of each audio file (default 1 sec.)
          -f | --force        keep going even if one of the audio files cannot be processed
          -h | --help         display this help message
          AUDIO_FILE [...]  a list of one or more audio files to be modified

Example:  gimmeasec song.mp3
            - creates song_1s.mp3
            - does not modify song.mp3
EOF
    exit 1
}

# There must be at least one command line argument
if (( ! $# )); then
    usage
fi

# Parse command line arguments
delay=1
audio_files=()

while (( $# )); do
    case "$1" in
        -b|--backup-dir)
            shift
            backup_dir="$1"
            if [[ ! -d "${backup_dir}" ]]; then
                echo "Directory not found: ${backup_dir}" >&2
                echo "Run '$0 --help' to display the command line syntax" >&2
                exit 1
            fi
            ;;
        -d|--delay)
            shift
            delay="$1"
            if [[ ! ${delay} =~ ^[0-9]+$ ]]; then
                echo "DELAY must be an integer; got: ${delay}" >&2
                echo "Run '$0 --help' to display the command line syntax" >&2
                exit 1
            fi
            ;;
        -f|--force)
            force=1
            ;;
        -h|--help)
            usage
            ;;
        *)
            audio_files+=("$1")
            ;;
    esac
    shift
done

# The ffmpeg command must exist
if [[ ! -x $(command -v ffmpeg) ]]; then
    echo "Could not find the 'ffmpeg' command.  'ffmpeg' must be installed and in" >&2
    echo "the executable search path." >&2
    exit 1
fi

# Convert each audio file
for f in "${audio_files[@]}"; do

    # Make sure the audio file exists
    if [[ ! -f "${f}" ]]; then
        echo "File not found: ${f}" >&2

        # If the --force flag is set, keep going if file not found, else exit
        if [[ -z ${force} ]]; then
            exit 1
        fi
    fi

    # Add silence to the front of the audio file.  If unsuccessful, exit unless
    # the --force flag is set.
    ffmpeg -i "${f}" -af "adelay=${delay}s:all=true" "${f%.*}_${delay}s.${f##*.}" || \
       [[ ! -z ${force} ]] || \
        exit 1

    # Move the original file to the backup_dir, if defined
    if [[ ! -z ${backup_dir} ]]; then
        mv "${f}" "${backup_dir}/${f##*/}"
    fi
done

exit 0
